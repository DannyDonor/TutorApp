"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-—Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

from database import Session, User
from contextlib import contextmanager
from sqlalchemy.exc import SQLAlchemyError

@contextmanager
def session_scope():
    """–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏–µ–π –ë–î"""
    session = Session()
    try:
        yield session
        session.commit()
    except SQLAlchemyError as e:
        session.rollback()
        raise e
    finally:
        session.close()

def create_test_tutor():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞"""
    print("=== –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞ ===")
    
    try:
        with session_scope() as session:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä
            existing_tutor = session.query(User).filter_by(username='tutor1').first()
            if existing_tutor:
                print("‚úÖ –†–µ–ø–µ—Ç–∏—Ç–æ—Ä 'tutor1' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                print(f"   Email: {existing_tutor.email}")
                print(f"   –°—Ç–∞—Ç—É—Å: {'–æ–¥–æ–±—Ä–µ–Ω' if existing_tutor.is_approved else '–æ–∂–∏–¥–∞–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è'}")
                return True
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞
            tutor = User(
                username='tutor1',
                email='tutor1@example.com',
                role='tutor',
                is_approved=True  # –°—Ä–∞–∑—É –æ–¥–æ–±—Ä—è–µ–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            )
            tutor.set_password('tutor123')
            session.add(tutor)
            session.commit()
            
            print("‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä:")
            print("   –õ–æ–≥–∏–Ω: tutor1")
            print("   –ü–∞—Ä–æ–ª—å: tutor123")
            print("   Email: tutor1@example.com")
            print("   –°—Ç–∞—Ç—É—Å: –æ–¥–æ–±—Ä–µ–Ω")
            
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞: {e}")
        return False

def create_second_tutor():
    """–°–æ–∑–¥–∞–µ—Ç –≤—Ç–æ—Ä–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞"""
    print("\n=== –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞ ===")
    
    try:
        with session_scope() as session:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä
            existing_tutor = session.query(User).filter_by(username='tutor2').first()
            if existing_tutor:
                print("‚úÖ –†–µ–ø–µ—Ç–∏—Ç–æ—Ä 'tutor2' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                return True
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–≥–æ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞
            tutor = User(
                username='tutor2',
                email='tutor2@example.com',
                role='tutor',
                is_approved=True
            )
            tutor.set_password('tutor123')
            session.add(tutor)
            session.commit()
            
            print("‚úÖ –°–æ–∑–¥–∞–Ω –≤—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä:")
            print("   –õ–æ–≥–∏–Ω: tutor2")
            print("   –ü–∞—Ä–æ–ª—å: tutor123")
            print("   Email: tutor2@example.com")
            
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞: {e}")
        return False

if __name__ == '__main__':
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    try:
        from migrate_db import check_database_structure, quick_fix
        
        needs_migration, missing_columns = check_database_structure()
        if needs_migration:
            print("‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
            if not quick_fix():
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ë–î. –ó–∞–ø—É—Å—Ç–∏—Ç–µ migrate_db.py")
                exit(1)
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
    
    success1 = create_test_tutor()
    success2 = create_second_tutor()
    
    if success1 and success2:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
        print("1. –í–æ–π—Ç–∏ –∫–∞–∫ admin/admin123 –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        print("2. –í–æ–π—Ç–∏ –∫–∞–∫ tutor1/tutor123 –∏–ª–∏ tutor2/tutor123 –¥–ª—è —Ä–∞–±–æ—Ç—ã —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–º")
        print("3. –°–æ–∑–¥–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∏—Ö –∫ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞–º")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤—Å–µ—Ö —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤")