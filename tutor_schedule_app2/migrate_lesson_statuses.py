#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ —É—Ä–æ–∫–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import engine, Base, Lesson
from sqlalchemy.orm import sessionmaker

# –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
Session = sessionmaker(bind=engine)

def migrate_lesson_statuses():
    """–ú–∏–≥—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ —É—Ä–æ–∫–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫"""
    
    session = Session()
    
    try:
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å—Ç–∞—Ç—É—Å–æ–≤ —É—Ä–æ–∫–æ–≤...")
        
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–æ–≤
        status_mapping = {
            'scheduled': '–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω',
            'completed': '–ø—Ä–æ–≤–µ–¥–µ–Ω', 
            'cancelled': '–æ—Ç–º–µ–Ω–µ–Ω',
            'no_show': '–Ω–µ_–ø—Ä–∏—à–µ–ª'
        }
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Ä–æ–∫–∏
        lessons = session.query(Lesson).all()
        
        updated_count = 0
        
        for lesson in lessons:
            old_status = lesson.status
            if old_status in status_mapping:
                lesson.status = status_mapping[old_status]
                updated_count += 1
                print(f"  üìù –£—Ä–æ–∫ {lesson.id}: {old_status} ‚Üí {lesson.status}")
        
        # –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º report_status –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        for lesson in lessons:
            old_report_status = lesson.report_status
            if old_report_status in status_mapping:
                lesson.report_status = status_mapping[old_report_status]
                print(f"  üìã –û—Ç—á–µ—Ç —É—Ä–æ–∫–∞ {lesson.id}: {old_report_status} ‚Üí {lesson.report_status}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        session.commit()
        
        print(f"\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ —É—Ä–æ–∫–æ–≤: {updated_count}")
        print(f"üìä –í—Å–µ–≥–æ —É—Ä–æ–∫–æ–≤ –≤ –ë–î: {len(lessons)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:")
        for status in ['–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω', '–ø—Ä–æ–≤–µ–¥–µ–Ω', '–æ—Ç–º–µ–Ω–µ–Ω', '–Ω–µ_–ø—Ä–∏—à–µ–ª']:
            count = session.query(Lesson).filter(Lesson.status == status).count()
            print(f"  {status}: {count}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        session.rollback()
        raise
    finally:
        session.close()

if __name__ == "__main__":
    migrate_lesson_statuses()